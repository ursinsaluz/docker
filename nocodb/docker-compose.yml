services:
  nocodb:
    container_name: nocodb
    image: "nocodb/nocodb:latest"
    restart: always
    environment:
      - "NC_DB=pg://nocodb-db:5432?u=${DATABASE_USER}&p=${DATABASE_PW}&d=${DATABASE_NAME}"
      - "NC_PUBLIC_URL=https://nocodb.${DOMAINNAME}"
      - NC_DISABLE_TELE=true
    volumes:
      - "nocodb-data:/usr/app/data"
    depends_on:
      - nocodb-db
    labels:
      # --- Traefik Labels ---
      - "traefik.enable=true"
      - "traefik.http.routers.nocodb.rule=Host(`nocodb.${DOMAINNAME}`)"
      - "traefik.http.routers.nocodb.entrypoints=websecure"
      - "traefik.http.routers.nocodb.tls=true"
      - "traefik.http.services.nocodb.loadbalancer.server.port=8080"
      - "traefik.docker.network=traefik"
    networks:
      - traefik

  nocodb-db:
    container_name: nocodb-db
    image: "postgres:12.17-alpine"
    restart: always
    environment:
      POSTGRES_DB: "${DATABASE_NAME}"
      POSTGRES_PASSWORD: "${DATABASE_PW}"
      POSTGRES_USER: "${DATABASE_USER}"
    volumes:
      - "nocodb-db:/var/lib/postgresql/data"
    healthcheck:
      test: "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"
      interval: 10s
      timeout: 2s
      retries: 10
    networks:
      - traefik

# Define the shared network as external
networks:
  traefik:
    external: true

# Define volumes used by this stack
volumes:
  nocodb-data:
    name: nocodb-data
  nocodb-db:
    name: nocodb-db